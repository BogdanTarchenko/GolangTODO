definitions:
  dto.CreateTaskRequest:
    properties:
      deadline:
        example: "2025-06-01T18:00:00Z"
        type: string
      description:
        example: Купить хлеб, молоко и яйца
        type: string
      priority:
        example: MEDIUM
        type: string
      title:
        example: Купить продукты
        minLength: 4
        type: string
    required:
    - title
    type: object
  dto.PaginatedTasksResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.TaskResponse'
        type: array
      meta:
        $ref: '#/definitions/dto.PaginationMeta'
    type: object
  dto.PaginationMeta:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.TaskResponse:
    properties:
      created_at:
        example: "2025-05-04T21:00:00Z"
        type: string
      deadline:
        example: "2025-06-01T18:00:00Z"
        type: string
      description:
        example: Купить хлеб, молоко и яйца
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      priority:
        example: MEDIUM
        type: string
      status:
        example: ACTIVE
        type: string
      title:
        example: Купить продукты
        type: string
      updated_at:
        example: "2025-05-04T21:30:00Z"
        type: string
    type: object
  dto.UpdateTaskRequest:
    properties:
      deadline:
        example: "2025-06-02T18:00:00Z"
        type: string
      description:
        example: Новое описание
        type: string
      priority:
        example: HIGH
        type: string
      title:
        example: Обновлённая задача
        type: string
    type: object
  dto.UpdateTaskStatusRequest:
    properties:
      is_completed:
        example: true
        type: boolean
    type: object
info:
  contact: {}
paths:
  /tasks:
    get:
      description: Returns a list of all existing tasks with optional filters and
        sorting
      parameters:
      - description: Task status
        in: query
        name: status
        type: string
      - description: Task priority
        in: query
        name: priority
        type: string
      - description: 'Sort by field: deadline, created_at, priority'
        in: query
        name: sort_by
        type: string
      - description: 'Sort order: asc or desc'
        in: query
        name: sort_order
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PaginatedTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Creates a new task with the provided data
      parameters:
      - description: New task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Deletes a task by its identifier
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Task successfully deleted
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a task
      tags:
      - tasks
    get:
      description: Returns a task by its identifier
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a task by ID
      tags:
      - tasks
    patch:
      consumes:
      - application/json
      description: Updates an existing task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a task
      tags:
      - tasks
  /tasks/{id}/status:
    patch:
      consumes:
      - application/json
      description: Updates the is_completed flag and recalculates the status
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Completion status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mark task as completed or not completed
      tags:
      - tasks
swagger: "2.0"
